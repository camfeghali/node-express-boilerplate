"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.promise");

var _httpErrors = _interopRequireDefault(require("http-errors"));

var _primaryKeysManager = _interopRequireDefault(require("./primary-keys-manager"));

var _queryOptions = _interopRequireDefault(require("./query-options"));

class ResourceGetter {
  constructor(model, params) {
    this._model = model.unscoped();
    this._params = params;
  }

  async perform() {
    const queryOptions = new _queryOptions.default(this._model, {
      includeRelations: true
    });
    await queryOptions.filterByIds([this._params.recordId]);
    const record = await this._model.findOne(queryOptions.sequelizeOptions);

    if (!record) {
      throw (0, _httpErrors.default)(404, `The ${this._model.name} #${this._params.recordId} does not exist.`);
    }

    new _primaryKeysManager.default(this._model).annotateRecords([record]);
    return record;
  }

}

module.exports = ResourceGetter;