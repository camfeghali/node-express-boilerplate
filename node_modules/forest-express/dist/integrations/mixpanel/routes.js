"use strict";

var _ = require('lodash');

var IntegrationInformationsGetter = require('../../services/integration-informations-getter');

var MixpanelEventsGetter = require('./services/mixpanel-events-getter');

var serializeMixpanelEvents = require('./serializers/mixpanel-events');

var auth = require('../../services/auth');

var path = require('../../services/path');

var context = require('../../context');

module.exports = function Routes(app, model, Implementation, options) {
  var _this = this;

  var _context$inject = context.inject(),
      modelsManager = _context$inject.modelsManager;

  var modelName = Implementation.getModelName(model);
  var integrationInfo;

  if (options.integrations && options.integrations.mixpanel) {
    integrationInfo = new IntegrationInformationsGetter(modelName, Implementation, options.integrations.mixpanel).perform();
  }

  if (integrationInfo) {
    var integrationValues = integrationInfo.split('.');
    integrationInfo = {
      collection: modelsManager.getModels()[integrationValues[0]],
      field: integrationValues[1]
    };
  }

  this.mixpanelEvents = function (request, response, next) {
    new MixpanelEventsGetter(Implementation, _.extend(request.query, request.params), options, integrationInfo).perform().then(function (events) {
      return serializeMixpanelEvents(events, modelName, {}, options);
    }).then(function (events) {
      response.send(events);
    })["catch"](next);
  };

  this.perform = function () {
    app.get(path.generate("".concat(modelName, "/:recordId/relationships/mixpanel_last_events"), options), auth.ensureAuthenticated, _this.mixpanelEvents);
  };
};